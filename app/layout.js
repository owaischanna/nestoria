import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Toaster } from 'react-hot-toast';
import { AuthProvider } from "./context/AuthContext"; // Import the AuthProvider
import Script from "next/script";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata = {
  title: "Nestoria",
  description: "Generated by create next app",
};

export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <AuthProvider> {/* Wrap everything with the provider */}
          <Toaster position="top-center" reverseOrder={false} />
          {children}
        </AuthProvider>


        <Script src="/assets/lang.config.js" strategy="beforeInteractive" /> 
        
    

    
        <Script 
            id="google-translate-init"
            dangerouslySetInnerHTML={{
                __html: `
                    function googleTranslateElementInit() {
                        new google.translate.TranslateElement({
                            pageLanguage: langConfig.default || 'en',
                            includedLanguages: langConfig.languages.map(l => l.code).join(',') || 'en,es',
                            layout: google.translate.TranslateElement.InlineLayout.SIMPLE,
                            autoDisplay: false
                        }, 'google_translate_element');
                    }
                `
            }}
            strategy="afterInteractive"
        />
        <Script 
            src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"
            strategy="afterInteractive"
        />

        {/* Optional: A hidden div where Google places its default selector */}
  <div id="google_translate_element" style={{ display: 'none' }}></div>
        
        {/* === END: GOOGLE TRANSLATE SCRIPTS === */}
      </body>
    </html>
  );
}